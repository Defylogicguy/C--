{
	"C++ code snippet": {
		"prefix": "demo",
		"body": [
			"/*************************",
			"  Author: Defy logic guy",
			"  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} - ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR}",
			"*************************/",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"ostream &operator<<(ostream &os, const string &s)",
			"{",
			"\tos.write(s.data(), s.size());",
			"\treturn os;",
			"}",
			"template <typename A, typename B>",
			"ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }",
			"template <typename T>",
			"auto operator<<(ostream &os, const T &c) -> typename enable_if<!is_same<T, string>::value, decltype(c.begin(), c.end(), os)>::type",
			"{",
			"\tfor (auto it = c.begin(); it != c.end(); ++it)",
			"\t\tos << (it == c.begin() ? \"{\" : \", \") << *it;",
			"\treturn os << \"}\";",
			"}",
			"#define dbg(x) cerr << #x << \" = \" << (x) << '\\n';",
			"#define int long long",
			"#define float double",
			"#define all(x) x.begin(), x.end()",
			"#define rall(x) x.rbegin(), x.rend()",
			"#define maxall(x) *max_element(all(x))",
			"#define minall(x) *min_element(all(x))",
			"#define heap priority_queue",
			"#define pb push_back",
			"#define MOD 1000000007",
			"#define NAME \"${TM_FILENAME_BASE}\"",
			"",
			"void solve()",
			"{",
			"}",
			"",
			"signed main()",
			"{",
			"\tif (fopen(NAME \".INP\", \"r\"))",
			"\t{",
			"\t\tfreopen(NAME \".INP\", \"r\", stdin);",
			"\t\tfreopen(NAME \".OUT\", \"w\", stdout);",
			"\t}",
			"",
			"\tios_base::sync_with_stdio(false);",
			"\tcin.tie(nullptr);",
			"\tcout.tie(nullptr);",
			"",
			"\tint tt = 1;",
			"\t// cin >> tt;",
			"",
			"\twhile (tt--)",
			"\t\tsolve();",
			"",
			"\treturn 0;",
			"}",
			""
		],
		"description": "Cpp snippet for CP",
		"isFileTemplate": true
	},
}